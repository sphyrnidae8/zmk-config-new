/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        BSPC_TAP_SYM_HOLD: BSPC_TAP_SYM_HOLD {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_TAP_SYM_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <100>;
        };

        bigsmall: bigsmall {
            compatible = "zmk,behavior-tap-dance";
            label = "BIGSMALL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W           &kp E        &kp R             &kp T          &kp Y         &kp U                           &kp I               &kp O           &kp P                   &kp BSPC
&kp LCTRL  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G          &kp H         &mt LEFT_SHIFT J                &mt LEFT_CONTROL K  &mt LEFT_ALT L  &mt RIGHT_COMMAND SEMI  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C        &kp V             &kp B          &kp N         &kp M                           &kp COMMA           &kp DOT         &kp FSLH                &kp ESC
                                           &lt 4 TAB    &lt 6 SPACE       &lt 5 ENTER    &lt 1 ESCAPE  &BSPC_TAP_SYM_HOLD 2 BACKSPACE  &lt 7 DELETE
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp CARET             &kp LEFT_PARENTHESIS     &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp TILDE  &kp BACKSLASH      &kp SLASH         &kp LEFT_BRACE     &kp RIGHT_BRACE       &kp RIGHT_PARENTHESIS    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &kp HASH           &kp DOLLAR        &kp PIPE           &kp EXCLAMATION       &kp QUESTION             &trans    &trans    &trans    &trans     &trans  &trans
                                                &bigsmall          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp RET   &trans    &kp RALT
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp AMPERSAND  &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp ASTERISK    &kp CARET        &kp AMPS         &kp KP_MULTIPLY  &kp LPAR        &kp RPAR     &kp BSPC
&kp MINUS  &kp COMMA      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS        &kp DE_A_UMLAUT  &kp DE_O_UMLAUT  &kp DE_U_UMLAUT  &kp DE_SHARP_S  &kp DE_EURO  &kp GRAVE
&kp LSHFT  &kp PERIOD     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS       &kp UNDER        &kp PLUS         &kp LBRC         &kp RBRC        &kp PIPE     &kp TILDE
                                        &kp PERCENT   &kp NUMBER_0  &kp EQUAL       &kp RET          &studio_unlock   &kp RALT
            >;
        };

        button {
            bindings = <
&trans  &trans            &trans        &trans            &trans          &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans        &trans            &trans          &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans            &trans          &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_TOG    &rgb_ug RGB_COLOR_HSB(114,90,49)  &rgb_ug RGB_BRI    &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD
&trans  &trans  &trans  &trans  &trans  &trans    &ext_power EP_TOG  &kp K_NEXT                        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE       &rgb_ug RGB_SAI
&trans  &trans  &trans  &trans  &trans  &trans    &out OUT_TOG       &trans                            &trans             &trans           &trans           &rgb_ug RGB_SAD
                        &trans  &trans  &trans    &trans             &trans                            &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK       &mkp RCLK       &mkp MCLK     &trans           &trans  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans        &trans           &trans  &trans
                        &trans  &trans  &trans    &kp ENTER       &trans          &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
